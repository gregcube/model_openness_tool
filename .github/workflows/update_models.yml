name: Update models

on:
  pull_request:
    types:
      - closed
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: 'Create or update models on environment'
        required: true
        type: environment
        default: 'Stage'

jobs:
  secrets-check:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment || 'Production' }}
    steps:
      - name: Check DEPLOY_HOST
        env:
          DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
        run: |
          if [ -z "$DEPLOY_HOST" ]; then
            echo "DEPLOY_HOST is not set."
            exit 1
          fi

      - name: Check DEPLOY_USER
        env:
          DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
        run: |
          if [ -z "$DEPLOY_USER" ]; then
            echo "DEPLOY_USER is not set."
            exit 1
          fi

      - name: Check DEPLOY_PATH
        env:
          DEPLOY_PATH: ${{ secrets.DEPLOY_PATH }}
        run: |
          if [ -z "$DEPLOY_PATH" ]; then
            echo "DEPLOY_PATH is not set."
            exit 1
          fi

      - name: Check DEPLOY_KEY
        env:
          DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
        run: |
          if [ -z "$DEPLOY_KEY" ]; then
            echo "DEPLOY_KEY is not set"
            exit 1
          fi

  update-models:
    runs-on: ubuntu-latest
    needs: secrets-check
    environment: ${{ inputs.environment || 'Production' }}

    env:
      DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
      DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
      DEPLOY_PATH: ${{ secrets.DEPLOY_PATH }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Start ssh-agent and add key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.DEPLOY_KEY }}

      - name: Add server to known hosts
        run: ssh-keyscan -H $DEPLOY_HOST >> ~/.ssh/known_hosts

      - name: List models on PR merge
        if: ${{ github.event_name == 'pull_request' &&
                github.event.pull_request.merged == true }}
        run: |
          git fetch origin main
          git diff \
            --name-only \
            --diff-filter=AM origin/main...${{ github.sha }} | \
            grep '^models/.*\.yml$' > models.txt || true

      - name: List models on workflow_dispatch
        if: github.event_name == 'workflow_dispatch'
        run: |
          git fetch origin ${{ github.ref_name }}
          mkdir tmp
          rsync -az \
            --include="*.yml" \
            --exclude="*" \
            $DEPLOY_USER@$DEPLOY_HOST:$DEPLOY_PATH/models/ ./tmp/
          find tmp/ -maxdepth 1 -type f | while read -r file; do
            basefile=$(basename "$file")
            if [ -f "models/$basefile" ]; then
              git diff --name-only --no-index "$file" "models/$basefile" || true
            fi
          done > models.txt
          rm -rf tmp

      - name: Set model sync trigger
        id: model_check
        run: |
          echo "sync=$([ -s models.txt ] && echo true || echo false)" >> $GITHUB_ENV

      - name: Sync models
        if: ${{ env.sync == 'true' }}
        run: |
            rsync -az \
              --files-from=models.txt \
              ./ $DEPLOY_USER@$DEPLOY_HOST:$DEPLOY_PATH/
            ssh $DEPLOY_USER@$DEPLOY_HOST << EOF
              cd $DEPLOY_PATH
              ./vendor/bin/drush scr scripts/sync_models.php
              ./vendor/bin/drush cr
            EOF

      - name: No changes
        if: ${{ env.sync == 'false' }}
        run: echo "No model changes detected. Skipping"
